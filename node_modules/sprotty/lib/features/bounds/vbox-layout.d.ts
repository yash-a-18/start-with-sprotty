/********************************************************************************
 * Copyright (c) 2017-2024 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
import { Bounds, Point } from 'sprotty-protocol/lib/utils/geometry';
import { SParentElementImpl, SChildElementImpl } from "../../base/model/smodel";
import { AbstractLayout } from './abstract-layout';
import { AbstractLayoutOptions } from './layout-options';
import { BoundsData } from './hidden-bounds-updater';
import { InternalLayoutContainer } from './model';
import { StatefulLayouter } from './layout';
import { HAlignment } from 'sprotty-protocol/lib/model';
export interface VBoxLayoutOptions extends AbstractLayoutOptions {
    vGap: number;
    hAlign: HAlignment;
}
/**
 * Layouts children of a container in vertical (top->bottom) direction.
 */
export declare class VBoxLayouter extends AbstractLayout<VBoxLayoutOptions> {
    static KIND: string;
    protected getChildrenSize(container: SParentElementImpl & InternalLayoutContainer, containerOptions: VBoxLayoutOptions, layouter: StatefulLayouter): {
        width: number;
        height: number;
    };
    protected layoutChild(child: SChildElementImpl, boundsData: BoundsData, bounds: Bounds, childOptions: VBoxLayoutOptions, containerOptions: VBoxLayoutOptions, currentOffset: Point, maxWidth: number, maxHeight: number): {
        x: number;
        y: number;
    };
    protected getDefaultLayoutOptions(): VBoxLayoutOptions;
    protected spread(a: VBoxLayoutOptions, b: VBoxLayoutOptions): VBoxLayoutOptions;
}
//# sourceMappingURL=vbox-layout.d.ts.map