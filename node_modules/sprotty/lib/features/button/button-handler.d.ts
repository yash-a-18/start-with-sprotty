/********************************************************************************
 * Copyright (c) 2017-2018 TypeFox and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
import { interfaces } from 'inversify';
import { Action } from 'sprotty-protocol/lib/actions';
import { InstanceRegistry } from '../../utils/registry';
import { SButtonImpl } from './model';
export interface IButtonHandler {
    buttonPressed(button: SButtonImpl): (Action | Promise<Action>)[];
}
export interface IButtonHandlerRegistration {
    TYPE: string;
    factory: () => IButtonHandler;
}
export declare class ButtonHandlerRegistry extends InstanceRegistry<IButtonHandler> {
    constructor(buttonHandlerRegistrations: IButtonHandlerRegistration[]);
}
/**
 * Utility function to register a button handler for an button type.
 */
export declare function configureButtonHandler(context: {
    bind: interfaces.Bind;
    isBound: interfaces.IsBound;
}, type: string, constr: interfaces.ServiceIdentifier<IButtonHandler>): void;
//# sourceMappingURL=button-handler.d.ts.map